/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   location-mixin.js
 */

declare namespace Fabric {


  /**
   * Fabric.LocationMixin
   */
  function LocationMixin<T extends new (...args: any[]) => {}>(base: T): T & LocationMixinConstructor;

  interface LocationMixinConstructor {
    new(...args: any[]): LocationMixin;
  }

  interface LocationMixin {

    /**
     * Check for position when ready
     */
    auto: boolean|null|undefined;

    /**
     * Disable email input on sign-up form
     */
    disabled: boolean|null|undefined;

    /**
     * Error
     */
    readonly error: object|null|undefined;

    /**
     * If true, enables high accuracy GPS.
     */
    highAccuracy: boolean|null|undefined;

    /**
     * The latitude of the current position.
     */
    readonly latitude: number|null|undefined;

    /**
     * The longitude of the current position.
     */
    readonly longitude: number|null|undefined;

    /**
     * The maximumAge option in the Gelocation API.
     */
    maximumAge: number|null|undefined;

    /**
     * Current permissions state:
     * granted, prompt, denied or unknown
     */
    readonly permissions: string|null|undefined;

    /**
     * Permissions granted
     */
    readonly granted: boolean|null|undefined;

    /**
     * Geolocation API position object
     */
    readonly position: object|null|undefined;

    /**
     * Disable email input on sign-up form
     */
    readonly supported: boolean|null|undefined;

    /**
     * The timeout option in the Gelocation API.
     */
    timeout: number|null|undefined;

    /**
     * If true, the latitude/longitude update as the device changes
     * position. If not set, the latitude/longitude are provided once.
     */
    listen: boolean|null|undefined;

    /**
     * listen for changes
     */
    _listen: Function|null|undefined;

    /**
     * Connected callback
     */
    connectedCallback(): void;

    /**
     * Disconnected callback
     */
    disconnectedCallback(): void;

    /**
     * Check for location
     */
    check(): void;

    /**
     * Success callback when the Geolocation API returns results.
     *
     * @param pos A position object from the Geolocation API.
     */
    _onSuccess(pos: Position|null): void;

    /**
     * Error callback when the Geolocation API returns an error.
     *
     * @param err The error that was returned.
     */
    _onError(err: Position|null): void;

    /**
     * Stop updating latitude/longitude as the device changes position.
     */
    _clearlisten(): void;

    /**
     * Reset all values
     */
    reset(): void;
  }
}
